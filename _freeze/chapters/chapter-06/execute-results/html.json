{
  "hash": "4188482417242799e8a346e1c0314e70",
  "result": {
    "markdown": "# Preparing data to answer causal questions\n\n\n\n\n\n## Introduction to the data\n\nThroughout this book we will be using data obtained from [Touring Plans](https://touringplans.com). Touring Plans is a company that helps folks plan their trips to Disney and Universal theme parks. One of their goals is to accurately predict attraction wait times at these theme parks by leveraging data and statistical modeling. The `{touringplans}` R package includes several datasets containing information about Disney theme park attractions. A summary of the attractions included in the package can be found by running the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(touringplans)\nattractions_metadata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 8\n   dataset_name name  short_name park  land  opened_on \n   <chr>        <chr> <chr>      <chr> <chr> <date>    \n 1 alien_sauce… Alie… Alien Sau… Disn… Toy … 2018-06-30\n 2 dinosaur     DINO… DINOSAUR   Disn… Dino… 1998-04-22\n 3 expedition_… Expe… Expeditio… Disn… Asia  2006-04-07\n 4 flight_of_p… Avat… Flight of… Disn… Pand… 2017-05-27\n 5 kilimanjaro… Kili… Kilimanja… Disn… Afri… 1998-04-22\n 6 navi_river   Na'v… Na'vi Riv… Disn… Pand… 2017-05-27\n 7 pirates_of_… Pira… Pirates o… Magi… Adve… 1973-12-17\n 8 rock_n_roll… Rock… Rock Coas… Disn… Suns… 1999-07-29\n 9 seven_dwarf… Seve… 7 Dwarfs … Magi… Fant… 2014-05-28\n10 slinky_dog   Slin… Slinky Dog Disn… Toy … 2018-06-30\n11 soarin       Soar… Soarin'    Epcot Worl… 2005-05-05\n12 spaceship_e… Spac… Spaceship… Epcot Worl… 1982-10-01\n13 splash_moun… Spla… Splash Mo… Magi… Fron… 1992-07-17\n14 toy_story_m… Toy … Toy Story… Disn… Toy … 2008-05-31\n# ℹ 2 more variables: duration <dbl>,\n#   average_wait_per_hundred <dbl>\n```\n\n\n:::\n:::\n\n\nAdditionally, this package contains a dataset with raw metadata about the parks, with observations recorded daily. This metadata includes information like the Walt Disney World ticket season on the particular day (was it high season -- think Christmas -- or low season -- think right when school started), what the historic temperatures were in the park on that day, and whether there was a special event, such as \"extra magic hours\" in the park on that day (did the park open early to guests staying in the Walt Disney World resorts?).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparks_metadata_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,079 × 181\n   date       wdw_ticket_season dayofweek dayofyear\n   <date>     <chr>                 <dbl>     <dbl>\n 1 2015-01-01 <NA>                      5         0\n 2 2015-01-02 <NA>                      6         1\n 3 2015-01-03 <NA>                      7         2\n 4 2015-01-04 <NA>                      1         3\n 5 2015-01-05 <NA>                      2         4\n 6 2015-01-06 <NA>                      3         5\n 7 2015-01-07 <NA>                      4         6\n 8 2015-01-08 <NA>                      5         7\n 9 2015-01-09 <NA>                      6         8\n10 2015-01-10 <NA>                      7         9\n# ℹ 2,069 more rows\n# ℹ 177 more variables: weekofyear <dbl>,\n#   monthofyear <dbl>, year <dbl>, season <chr>,\n#   holidaypx <dbl>, holidaym <dbl>, holidayn <chr>,\n#   holiday <dbl>, wdwticketseason <chr>,\n#   wdwracen <chr>, wdweventn <chr>, wdwevent <dbl>,\n#   wdwrace <dbl>, wdwseason <chr>, …\n```\n\n\n:::\n:::\n\n\nSuppose the causal question of interest is:\n\n**Is there a relationship between whether there were \"Extra Magic Hours\" in the morning at Magic Kingdom and the average wait time for an attraction called the \"Seven Dwarfs Mine Train\" the same day between 9am and 10am in 2018?** \n\nLet's begin by diagramming this causal question (@fig-seven-diag).\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Diagram of the causal question \"Is there a relationship between whether there were \"Extra Magic Hours\" in the morning at Magic Kingdom and the average wait time for an attraction called the \"Seven Dwarfs Mine Train\" the same day between 9am and 10am in 2018?\"](chapter-06_files/figure-html/fig-seven-diag-1.png){#fig-seven-diag width=672}\n:::\n:::\n\nSince we are not in charge of Walt Disney World's operations, we cannot randomize dates to have (or not) \"Extra Magic Hours\", therefore, we need to rely on previously collected observational data and do our best to emulate the *target trial* that we would have created, should it have been possible. Here, our observations are *days*. Looking at the diagram above, we can map each element of the causal question to elements of our target trial protocol:\n\n* **Eligibility criteria**: Days must be from 2018\n* **Exposure definition**: Magic kingdom had \"Extra Magic Hours\" in the morning\n* **Assignment procedures**: Observed -- if the historic data suggests there were \"Extra Magic Hours\" in the morning on a particular day, that day is classified as \"exposed\" otherwise it is \"unexposed\"\n* **Follow-up period**: From park open to 10am. \n* **Outcome definition**: The average posted wait time between 9am and 10am\n* **Causal contrast of interest**: Average treatment effect (we will discuss this in @sec-estimands)\n* **Analysis plan**: We use inverse probability waiting after fitting a propensity score model to estimate the average treatment effect of the exposure on the outcome of interest. We will adjust for variables as determined by our DAG (@sec-prop-dag)\n\n## Data wrangling and recipes\n\nMost of our data manipulation tools come from the `{dplyr}` package (@tbl-dplyr). We will also use `{lubridate}` to help us manipulate dates. \n\nTarget trial protocol element | {dplyr} functions\n------------------------------|--------------------\nEligibility criteria | `filter()`\nExposure definition | `mutate()`\nAssignment procedures | `mutate()`\nFollow-up period | `mutate()` `pivot_longer()` `pivot_wider()` \nOutcome definition | `mutate()`\nAnalysis plan | `select()`\n: Mapping target trial protocol elements to commonly used `{dplyr}` functions {#tbl-dplyr}\n\nTo answer this question, we are going to need to manipulate both the `seven_dwarfs_train` dataset as well as the `parks_metadata_raw` dataset. Let's start with the `seven_dwarfs_train` data set. The Seven Dwarfs Mine Train ride is an attraction at Walt Disney World's Magic Kingdom. The `seven_dwarfs_train` dataset in the {touringplans} package contains information about the date a particular wait time was recorded (`park_date`), the time of the wait time (`wait_datetime`), the actual wait time (`wait_minutes_actual`), and the posted wait time (`wait_minutes_posted`). Let's take a look at this dataset. The {skimr} package is great for getting a quick glimpse at a new dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\nskim(seven_dwarfs_train)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                   |\n|:------------------------|:------------------|\n|Name                     |seven_dwarfs_train |\n|Number of rows           |321631             |\n|Number of columns        |4                  |\n|_______________________  |                   |\n|Column type frequency:   |                   |\n|Date                     |1                  |\n|numeric                  |2                  |\n|POSIXct                  |1                  |\n|________________________ |                   |\n|Group variables          |None               |\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|park_date     |         0|             1|2015-01-01 |2021-12-28 |2018-04-07 |     2334|\n\n\n**Variable type: numeric**\n\n|skim_variable       | n_missing| complete_rate|  mean|      sd|     p0| p25| p50| p75| p100|hist  |\n|:-------------------|---------:|-------------:|-----:|-------:|------:|---:|---:|---:|----:|:-----|\n|wait_minutes_actual |    313996|          0.02| 23.99| 1064.06| -92918|  21|  31|  46|  217|▁▁▁▁▇ |\n|wait_minutes_posted |     30697|          0.90| 76.96|   33.99|      0|  50|  70|  95|  300|▆▇▁▁▁ |\n\n\n**Variable type: POSIXct**\n\n|skim_variable | n_missing| complete_rate|min                 |max                 |median              | n_unique|\n|:-------------|---------:|-------------:|:-------------------|:-------------------|:-------------------|--------:|\n|wait_datetime |         0|             1|2015-01-01 07:51:12 |2021-12-28 22:57:34 |2018-04-07 23:14:06 |   321586|\n\n\n:::\n:::\n\n\nExamining the output above, we learn that this dataset contains four columns and 321,631 rows. We also learn that the dates span from 2015 to 2021. We need this dataset to calculate our *outcome*. Recall from above that our outcome is defined as the average posted wait time between 9am and 10am. Additionally, recall our eligibility criteria states that we need to restrict our analysis to days in 2018.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: timechange\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nseven_dwarfs_train_2018 <- seven_dwarfs_train |>\n  filter(year(park_date) == 2018) |> # eligibility criteria \n  mutate(hour = hour(wait_datetime)) |> # get hour from wait\n  group_by(park_date, hour) |> # group by date\n  summarise(\n    wait_minutes_posted_avg = mean(wait_minutes_posted, na.rm = TRUE), \n    .groups = \"drop\") |> # get average wait time\n  mutate(wait_minutes_posted_avg = \n           case_when(is.nan(wait_minutes_posted_avg) ~ NA,\n                     TRUE ~ wait_minutes_posted_avg)) |> # if it is NAN make it NA \n  filter(hour == 9) # only keep the average wait time between 9 and 10\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nseven_dwarfs_train_2018\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 362 × 3\n   park_date   hour wait_minutes_posted_avg\n   <date>     <int>                   <dbl>\n 1 2018-01-01     9                    60  \n 2 2018-01-02     9                    60  \n 3 2018-01-03     9                    60  \n 4 2018-01-04     9                    68.9\n 5 2018-01-05     9                    70.6\n 6 2018-01-06     9                    33.3\n 7 2018-01-07     9                    46.4\n 8 2018-01-08     9                    69.5\n 9 2018-01-09     9                    64.3\n10 2018-01-10     9                    74.3\n# ℹ 352 more rows\n```\n\n\n:::\n:::\n\n\nNow that we have our outcome settled, we need to get our exposure variable, as well as any other park-specific variables about the day in question that may be used as variables that we adjust for. These are in the `parks_metadata_raw` dataset. This data will require extra cleaning, since the names are in the original format.\n\n::: callout-tip\nWe like to have our variable names follow a clean convention -- one way to do this is to follow Emily Riederer's \"Column Names as Contracts\" format [@Riederer_2020]. The basic idea is to predefine a set of words, phrases, or stubs with clear meanings to index information, and use these consistently when naming variables. For example, in these data, variables that are specific to a particular wait time are prepended with the term `wait` (e.g. `wait_datetime` and `wait_minutes_actual`), variables that are specific to the park on a particular day, acquired from parks metadata, are prepended with the term `park` (e.g. `park_date` or `park_temperature_high`). \n:::\n\nLet's first decide what variables we will need. In practice, this decision may involve an iterative process. For example, after drawing our DAG or after conducting diagnostic, we may determine that we need more variables than what we originally cleaned. Let's start by skimming this dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(parks_metadata_raw)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                   |\n|:------------------------|:------------------|\n|Name                     |parks_metadata_raw |\n|Number of rows           |2079               |\n|Number of columns        |181                |\n|_______________________  |                   |\n|Column type frequency:   |                   |\n|character                |42                 |\n|Date                     |1                  |\n|difftime                 |46                 |\n|logical                  |6                  |\n|numeric                  |86                 |\n|________________________ |                   |\n|Group variables          |None               |\n\n\n**Variable type: character**\n\n|skim_variable         | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|wdw_ticket_season     |       861|          0.59|   4|   7|     0|        3|          0|\n|season                |       253|          0.88|   4|  29|     0|       17|          0|\n|holidayn              |      1865|          0.10|   3|   7|     0|       43|          0|\n|wdwticketseason       |       761|          0.63|   4|   7|     0|        3|          0|\n|wdwracen              |      1992|          0.04|   4|   6|     0|        5|          0|\n|wdweventn             |      1832|          0.12|   3|  12|     0|        8|          0|\n|wdwseason             |        87|          0.96|   4|  29|     0|       17|          0|\n|mkeventn              |      1546|          0.26|   3|  11|     0|       10|          0|\n|epeventn              |       868|          0.58|   4|   5|     0|        4|          0|\n|hseventn              |      1877|          0.10|   4|   7|     0|        5|          0|\n|akeventn              |      2010|          0.03|   4|   4|     0|        2|          0|\n|holidayj              |      2037|          0.02|   5|  15|     0|        8|          0|\n|insession             |       105|          0.95|   2|   3|     0|       95|          0|\n|insession_enrollment  |       105|          0.95|   2|   4|     0|      100|          0|\n|insession_wdw         |       105|          0.95|   2|   4|     0|       94|          0|\n|insession_dlr         |       105|          0.95|   2|   4|     0|       94|          0|\n|insession_sqrt_wdw    |       105|          0.95|   2|   4|     0|       97|          0|\n|insession_sqrt_dlr    |       105|          0.95|   2|   4|     0|       97|          0|\n|insession_california  |       105|          0.95|   2|   4|     0|       89|          0|\n|insession_dc          |       105|          0.95|   2|   4|     0|       86|          0|\n|insession_central_fl  |       105|          0.95|   2|   4|     0|       71|          0|\n|insession_drive1_fl   |       105|          0.95|   2|   4|     0|       85|          0|\n|insession_drive2_fl   |       105|          0.95|   2|   4|     0|       95|          0|\n|insession_drive_ca    |       105|          0.95|   2|   4|     0|       91|          0|\n|insession_florida     |       105|          0.95|   2|   4|     0|       86|          0|\n|insession_mardi_gras  |       105|          0.95|   2|   4|     0|       82|          0|\n|insession_midwest     |       105|          0.95|   2|   4|     0|       75|          0|\n|insession_ny_nj       |       105|          0.95|   2|   4|     0|        8|          0|\n|insession_ny_nj_pa    |       105|          0.95|   2|   4|     0|       19|          0|\n|insession_new_england |       105|          0.95|   2|   4|     0|       45|          0|\n|insession_new_jersey  |       105|          0.95|   2|   4|     0|        2|          0|\n|insession_nothwest    |       105|          0.95|   2|   4|     0|       17|          0|\n|insession_planes      |       105|          0.95|   2|   4|     0|       81|          0|\n|insession_socal       |       105|          0.95|   2|   4|     0|       80|          0|\n|insession_southwest   |       105|          0.95|   2|   4|     0|       86|          0|\n|mkprddn               |       183|          0.91|  33|  41|     0|        2|          0|\n|mkprdnn               |      1358|          0.35|  29|  38|     0|        2|          0|\n|mkfiren               |       134|          0.94|  18|  65|     0|        8|          0|\n|epfiren               |       126|          0.94|  13|  35|     0|        2|          0|\n|hsfiren               |       485|          0.77|  24|  66|     0|        6|          0|\n|hsshwnn               |       164|          0.92|  10|  28|     0|        2|          0|\n|akshwnn               |       883|          0.58|  15|  33|     0|        2|          0|\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|date          |         0|             1|2015-01-01 |2021-08-31 |2017-11-05 |     2079|\n\n\n**Variable type: difftime**\n\n|skim_variable | n_missing| complete_rate|min        |max         |median   | n_unique|\n|:-------------|---------:|-------------:|:----------|:-----------|:--------|--------:|\n|mkopen        |         0|          1.00|21600 secs |32400 secs  |09:00:00 |        4|\n|mkclose       |         0|          1.00|54000 secs |107940 secs |22:00:00 |       13|\n|mkemhopen     |         0|          1.00|21600 secs |32400 secs  |09:00:00 |        5|\n|mkemhclose    |         0|          1.00|54000 secs |107940 secs |23:00:00 |       14|\n|mkopenyest    |         0|          1.00|21600 secs |32400 secs  |09:00:00 |        4|\n|mkcloseyest   |         0|          1.00|54000 secs |107940 secs |22:00:00 |       13|\n|mkopentom     |         0|          1.00|21600 secs |32400 secs  |09:00:00 |        4|\n|mkclosetom    |         0|          1.00|54000 secs |107940 secs |22:00:00 |       13|\n|epopen        |         0|          1.00|25200 secs |43200 secs  |09:00:00 |        6|\n|epclose       |         0|          1.00|61200 secs |90000 secs  |21:00:00 |        9|\n|epemhopen     |         0|          1.00|25200 secs |43200 secs  |09:00:00 |        6|\n|epemhclose    |         0|          1.00|61200 secs |90000 secs  |21:00:00 |       12|\n|epopenyest    |         0|          1.00|25200 secs |43200 secs  |09:00:00 |        6|\n|epcloseyest   |         0|          1.00|61200 secs |90000 secs  |21:00:00 |        9|\n|epopentom     |         0|          1.00|25200 secs |43200 secs  |09:00:00 |        6|\n|epclosetom    |         0|          1.00|61200 secs |90000 secs  |21:00:00 |        9|\n|hsopen        |         0|          1.00|21600 secs |36000 secs  |09:00:00 |        6|\n|hsclose       |         0|          1.00|50400 secs |86400 secs  |21:00:00 |       14|\n|hsemhopen     |         0|          1.00|21600 secs |36000 secs  |09:00:00 |        7|\n|hsemhclose    |         0|          1.00|50400 secs |93600 secs  |21:00:00 |       18|\n|hsopenyest    |         0|          1.00|21600 secs |36000 secs  |09:00:00 |        6|\n|hscloseyest   |         0|          1.00|50400 secs |86400 secs  |21:00:00 |       14|\n|hsopentom     |         0|          1.00|21600 secs |36000 secs  |09:00:00 |        6|\n|hsclosetom    |         0|          1.00|50400 secs |86400 secs  |21:00:00 |       14|\n|akopen        |         0|          1.00|25200 secs |32400 secs  |09:00:00 |        3|\n|akclose       |         0|          1.00|50400 secs |86400 secs  |20:00:00 |       16|\n|akemhopen     |         0|          1.00|25200 secs |32400 secs  |09:00:00 |        3|\n|akemhclose    |         0|          1.00|50400 secs |90000 secs  |20:00:00 |       17|\n|akopenyest    |         0|          1.00|25200 secs |32400 secs  |09:00:00 |        3|\n|akcloseyest   |         0|          1.00|50400 secs |86400 secs  |20:00:00 |       16|\n|akopentom     |         0|          1.00|25200 secs |32400 secs  |09:00:00 |        3|\n|akclosetom    |         0|          1.00|50400 secs |86400 secs  |20:00:00 |       16|\n|mkprddt1      |       183|          0.91|39600 secs |61200 secs  |15:00:00 |        5|\n|mkprddt2      |      1851|          0.11|50400 secs |73800 secs  |15:30:00 |        5|\n|mkprdnt1      |      1358|          0.35|68400 secs |82800 secs  |21:00:00 |       11|\n|mkprdnt2      |      1480|          0.29|0 secs     |84600 secs  |23:00:00 |        8|\n|mkfiret1      |       134|          0.94|66600 secs |80100 secs  |21:15:00 |       12|\n|mkfiret2      |      2069|          0.00|85800 secs |85800 secs  |23:50:00 |        1|\n|epfiret1      |       126|          0.94|64800 secs |81000 secs  |21:00:00 |        6|\n|epfiret2      |      2074|          0.00|85200 secs |85200 secs  |23:40:00 |        1|\n|hsfiret1      |       485|          0.77|0 secs     |82800 secs  |21:00:00 |       17|\n|hsfiret2      |      2045|          0.02|0 secs     |81000 secs  |21:00:00 |        5|\n|hsshwnt1      |       164|          0.92|65100 secs |79200 secs  |20:30:00 |       10|\n|hsshwnt2      |      1369|          0.34|72000 secs |82800 secs  |21:30:00 |       11|\n|akshwnt1      |       883|          0.58|65700 secs |76500 secs  |20:30:00 |       13|\n|akshwnt2      |      1149|          0.45|70200 secs |81000 secs  |21:45:00 |       13|\n\n\n**Variable type: logical**\n\n|skim_variable | n_missing| complete_rate| mean|count |\n|:-------------|---------:|-------------:|----:|:-----|\n|hsprddt1      |      2079|             0|  NaN|:     |\n|hsprddn       |      2079|             0|  NaN|:     |\n|akprddt1      |      2079|             0|  NaN|:     |\n|akprddt2      |      2079|             0|  NaN|:     |\n|akprddn       |      2079|             0|  NaN|:     |\n|akfiren       |      2079|             0|  NaN|:     |\n\n\n**Variable type: numeric**\n\n|skim_variable      | n_missing| complete_rate|      mean|        sd|        p0|       p25|       p50|       p75|      p100|hist  |\n|:------------------|---------:|-------------:|---------:|---------:|---------:|---------:|---------:|---------:|---------:|:-----|\n|dayofweek          |         0|             1| 4.000e+00| 2.000e+00| 1.000e+00| 2.000e+00| 4.000e+00| 6.000e+00| 7.000e+00|▇▃▃▃▇ |\n|dayofyear          |         0|             1| 1.818e+02| 1.063e+02| 0.000e+00| 8.900e+01| 1.840e+02| 2.730e+02| 3.650e+02|▇▇▇▇▇ |\n|weekofyear         |         0|             1| 2.609e+01| 1.520e+01| 0.000e+00| 1.300e+01| 2.600e+01| 3.900e+01| 5.300e+01|▇▇▇▇▇ |\n|monthofyear        |         0|             1| 6.510e+00| 3.480e+00| 1.000e+00| 3.000e+00| 7.000e+00| 1.000e+01| 1.200e+01|▇▅▆▅▇ |\n|year               |         0|             1| 2.017e+03| 1.740e+00| 2.015e+03| 2.016e+03| 2.017e+03| 2.019e+03| 2.021e+03|▇▃▃▃▃ |\n|holidaypx          |         0|             1| 7.850e+00| 6.890e+00| 0.000e+00| 3.000e+00| 6.000e+00| 1.000e+01| 3.300e+01|▇▅▂▁▁ |\n|holidaym           |         0|             1| 5.400e-01| 1.350e+00| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 5.000e+00|▇▁▁▁▁ |\n|holiday            |         0|             1| 1.000e-01| 3.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|wdwevent           |         0|             1| 1.200e-01| 3.200e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|wdwrace            |         0|             1| 4.000e-02| 2.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|wdwmaxtemp         |         5|             1| 8.280e+01| 8.530e+00| 5.111e+01| 7.829e+01| 8.450e+01| 8.954e+01| 9.772e+01|▁▁▃▇▆ |\n|wdwmintemp         |         6|             1| 6.550e+01| 1.018e+01| 2.748e+01| 5.903e+01| 6.835e+01| 7.410e+01| 8.128e+01|▁▂▃▆▇ |\n|wdwmeantemp        |         6|             1| 7.415e+01| 9.060e+00| 3.975e+01| 6.876e+01| 7.637e+01| 8.161e+01| 8.776e+01|▁▂▃▆▇ |\n|mkevent            |         0|             1| 2.600e-01| 4.400e-01| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00| 1.000e+00|▇▁▁▁▃ |\n|epevent            |         0|             1| 5.800e-01| 4.900e-01| 0.000e+00| 0.000e+00| 1.000e+00| 1.000e+00| 1.000e+00|▆▁▁▁▇ |\n|hsevent            |         0|             1| 1.000e-01| 3.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|akevent            |         0|             1| 3.000e-02| 1.800e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|mkemhmorn          |         0|             1| 1.900e-01| 4.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▂ |\n|mkemhmyest         |         0|             1| 1.900e-01| 4.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▂ |\n|mkemhmtom          |         0|             1| 1.900e-01| 4.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▂ |\n|mkemheve           |         0|             1| 1.300e-01| 3.300e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|mkhoursemh         |         0|             1| 1.364e+01| 1.980e+00| 7.500e+00| 1.300e+01| 1.400e+01| 1.500e+01| 2.398e+01|▁▇▅▁▁ |\n|mkhoursemhyest     |         0|             1| 1.365e+01| 1.980e+00| 7.500e+00| 1.300e+01| 1.400e+01| 1.500e+01| 2.398e+01|▁▇▅▁▁ |\n|mkhoursemhtom      |         0|             1| 1.364e+01| 1.980e+00| 7.500e+00| 1.300e+01| 1.400e+01| 1.500e+01| 2.398e+01|▁▇▅▁▁ |\n|mkemheyest         |         0|             1| 1.300e-01| 3.300e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|mkemhetom          |         0|             1| 1.300e-01| 3.300e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|epemhmorn          |         0|             1| 1.300e-01| 3.400e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|epemhmyest         |         0|             1| 1.300e-01| 3.400e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|epemhmtom          |         0|             1| 1.300e-01| 3.400e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|epemheve           |         0|             1| 1.300e-01| 3.400e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|epemheyest         |         0|             1| 1.300e-01| 3.400e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|epemhetom          |         0|             1| 1.300e-01| 3.400e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|ephoursemh         |         0|             1| 1.241e+01| 9.600e-01| 9.000e+00| 1.200e+01| 1.200e+01| 1.300e+01| 1.700e+01|▁▇▃▂▁ |\n|ephoursemhyest     |         0|             1| 1.241e+01| 9.600e-01| 9.000e+00| 1.200e+01| 1.200e+01| 1.300e+01| 1.700e+01|▁▇▃▂▁ |\n|ephoursemhtom      |         0|             1| 1.241e+01| 9.600e-01| 9.000e+00| 1.200e+01| 1.200e+01| 1.300e+01| 1.700e+01|▁▇▃▂▁ |\n|hsemhmorn          |         0|             1| 1.800e-01| 3.800e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▂ |\n|hsemhmyest         |         0|             1| 1.800e-01| 3.800e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▂ |\n|hsemhmtom          |         0|             1| 1.800e-01| 3.800e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▂ |\n|hsemheve           |         0|             1| 6.000e-02| 2.500e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|hsemheyest         |         0|             1| 6.000e-02| 2.500e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|hsemhetom          |         0|             1| 6.000e-02| 2.500e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|hshoursemh         |         0|             1| 1.232e+01| 1.490e+00| 8.000e+00| 1.100e+01| 1.200e+01| 1.300e+01| 1.800e+01|▁▇▇▂▁ |\n|hshoursemhyest     |         0|             1| 1.232e+01| 1.490e+00| 8.000e+00| 1.100e+01| 1.200e+01| 1.300e+01| 1.800e+01|▁▇▇▂▁ |\n|hshoursemhtom      |         0|             1| 1.232e+01| 1.490e+00| 8.000e+00| 1.100e+01| 1.200e+01| 1.300e+01| 1.800e+01|▁▇▇▂▁ |\n|akemhmorn          |         0|             1| 3.000e-01| 4.600e-01| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00| 1.000e+00|▇▁▁▁▃ |\n|akemhmyest         |         0|             1| 3.000e-01| 4.600e-01| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00| 1.000e+00|▇▁▁▁▃ |\n|akemhmtom          |         0|             1| 3.000e-01| 4.600e-01| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00| 1.000e+00|▇▁▁▁▃ |\n|akemheve           |         0|             1| 4.000e-02| 2.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|akemheyest         |         0|             1| 4.000e-02| 2.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|akemhetom          |         0|             1| 4.000e-02| 2.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 1.000e+00|▇▁▁▁▁ |\n|akhoursemh         |         0|             1| 1.177e+01| 1.800e+00| 7.000e+00| 1.100e+01| 1.200e+01| 1.300e+01| 1.700e+01|▂▇▇▅▁ |\n|akhoursemhyest     |         0|             1| 1.177e+01| 1.800e+00| 7.000e+00| 1.100e+01| 1.200e+01| 1.300e+01| 1.700e+01|▂▇▇▅▁ |\n|akhoursemhtom      |         0|             1| 1.176e+01| 1.800e+00| 7.000e+00| 1.100e+01| 1.200e+01| 1.300e+01| 1.700e+01|▂▇▇▅▁ |\n|mkhours            |         0|             1| 1.326e+01| 2.010e+00| 7.000e+00| 1.200e+01| 1.300e+01| 1.500e+01| 2.398e+01|▂▇▇▁▁ |\n|mkhoursyest        |         0|             1| 1.326e+01| 2.010e+00| 7.000e+00| 1.200e+01| 1.300e+01| 1.500e+01| 2.398e+01|▂▇▇▁▁ |\n|mkhourstom         |         0|             1| 1.326e+01| 2.000e+00| 7.000e+00| 1.200e+01| 1.300e+01| 1.500e+01| 2.398e+01|▂▇▇▁▁ |\n|ephours            |         0|             1| 1.202e+01| 6.400e-01| 8.000e+00| 1.200e+01| 1.200e+01| 1.200e+01| 1.700e+01|▁▁▇▁▁ |\n|ephoursyest        |         0|             1| 1.203e+01| 6.400e-01| 8.000e+00| 1.200e+01| 1.200e+01| 1.200e+01| 1.700e+01|▁▁▇▁▁ |\n|ephourstom         |         0|             1| 1.202e+01| 6.400e-01| 8.000e+00| 1.200e+01| 1.200e+01| 1.200e+01| 1.700e+01|▁▁▇▁▁ |\n|hshours            |         0|             1| 1.192e+01| 1.190e+00| 5.000e+00| 1.100e+01| 1.200e+01| 1.250e+01| 1.800e+01|▁▁▇▂▁ |\n|hshoursyest        |         0|             1| 1.193e+01| 1.200e+00| 5.000e+00| 1.100e+01| 1.200e+01| 1.250e+01| 1.800e+01|▁▁▇▂▁ |\n|hshourstom         |         0|             1| 1.192e+01| 1.190e+00| 5.000e+00| 1.100e+01| 1.200e+01| 1.250e+01| 1.800e+01|▁▁▇▂▁ |\n|akhours            |         0|             1| 1.146e+01| 1.680e+00| 6.000e+00| 1.050e+01| 1.100e+01| 1.250e+01| 1.700e+01|▁▃▇▃▁ |\n|akhoursyest        |         0|             1| 1.147e+01| 1.680e+00| 6.000e+00| 1.050e+01| 1.100e+01| 1.250e+01| 1.700e+01|▁▃▇▃▁ |\n|akhourstom         |         0|             1| 1.146e+01| 1.680e+00| 6.000e+00| 1.050e+01| 1.100e+01| 1.250e+01| 1.700e+01|▁▃▇▃▁ |\n|weather_wdwhigh    |         0|             1| 8.235e+01| 7.860e+00| 7.020e+01| 7.460e+01| 8.280e+01| 9.060e+01| 9.230e+01|▅▃▂▂▇ |\n|weather_wdwlow     |         0|             1| 6.410e+01| 9.260e+00| 4.920e+01| 5.580e+01| 6.360e+01| 7.400e+01| 7.610e+01|▅▅▃▂▇ |\n|weather_wdwprecip  |         0|             1| 1.500e-01| 8.000e-02| 3.000e-02| 8.000e-02| 1.200e-01| 2.300e-01| 3.500e-01|▇▆▃▅▁ |\n|capacitylost_mk    |         0|             1| 4.221e+05| 3.646e+04| 3.529e+05| 3.858e+05| 4.339e+05| 4.561e+05| 4.736e+05|▅▂▁▇▆ |\n|capacitylost_ep    |         0|             1| 3.669e+05| 2.402e+04| 3.252e+05| 3.384e+05| 3.808e+05| 3.820e+05| 3.947e+05|▅▁▁▂▇ |\n|capacitylost_hs    |         0|             1| 2.875e+05| 3.320e+04| 2.038e+05| 2.796e+05| 3.019e+05| 3.119e+05| 3.219e+05|▂▁▁▁▇ |\n|capacitylost_ak    |         0|             1| 2.282e+05| 1.497e+04| 2.108e+05| 2.208e+05| 2.232e+05| 2.328e+05| 2.739e+05|▇▅▁▁▂ |\n|capacitylostwgt_mk |         0|             1| 4.137e+07| 3.621e+06| 3.466e+07| 3.764e+07| 4.259e+07| 4.458e+07| 4.655e+07|▅▂▂▇▆ |\n|capacitylostwgt_ep |         0|             1| 3.534e+07| 2.201e+06| 3.169e+07| 3.269e+07| 3.667e+07| 3.667e+07| 3.768e+07|▅▁▁▁▇ |\n|capacitylostwgt_hs |         0|             1| 2.753e+07| 3.049e+06| 1.981e+07| 2.677e+07| 2.877e+07| 2.976e+07| 3.075e+07|▂▁▁▁▇ |\n|capacitylostwgt_ak |         0|             1| 2.239e+07| 1.398e+06| 2.079e+07| 2.178e+07| 2.180e+07| 2.278e+07| 2.674e+07|▇▅▁▁▂ |\n|mkprdday           |         0|             1| 1.070e+00| 5.900e-01| 0.000e+00| 1.000e+00| 1.000e+00| 1.000e+00| 3.000e+00|▁▇▁▁▁ |\n|mkprdngt           |         0|             1| 6.400e-01| 9.000e-01| 0.000e+00| 0.000e+00| 0.000e+00| 2.000e+00| 3.000e+00|▇▁▁▃▁ |\n|mkfirewk           |         0|             1| 9.400e-01| 2.600e-01| 0.000e+00| 1.000e+00| 1.000e+00| 1.000e+00| 2.000e+00|▁▁▇▁▁ |\n|epfirewk           |         0|             1| 9.400e-01| 2.500e-01| 0.000e+00| 1.000e+00| 1.000e+00| 1.000e+00| 3.000e+00|▁▇▁▁▁ |\n|hsprdday           |         0|             1| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00|▁▁▇▁▁ |\n|hsfirewk           |         0|             1| 7.800e-01| 4.500e-01| 0.000e+00| 1.000e+00| 1.000e+00| 1.000e+00| 2.000e+00|▂▁▇▁▁ |\n|hsshwngt           |         0|             1| 1.280e+00| 6.200e-01| 0.000e+00| 1.000e+00| 1.000e+00| 2.000e+00| 3.000e+00|▁▇▁▅▁ |\n|hsfirewks          |         0|             1| 1.000e+00| 0.000e+00| 1.000e+00| 1.000e+00| 1.000e+00| 1.000e+00| 1.000e+00|▁▁▇▁▁ |\n|akprdday           |         0|             1| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00| 0.000e+00|▁▁▇▁▁ |\n|akshwngt           |         0|             1| 1.040e+00| 9.700e-01| 0.000e+00| 0.000e+00| 1.000e+00| 2.000e+00| 3.000e+00|▇▂▁▇▁ |\n\n\n:::\n:::\n\n\n\nThis dataset contains many more variables than the one we worked with previously. For this analysis, we are going to select `date` (the observation date), `wdw_ticket_season` (the ticket season for the observation), `wdwmaxtemp` (the maximum temperature), `mkclose` (the time Magic Kingdom closed), `mkemhmorn` (whether Magic Kingdom had an \"Extra Magic Hour\" in the morning).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparks_metadata_clean <- parks_metadata_raw |>\n  ##  based on our analysis plan, we will select the following variables\n  select(date, wdw_ticket_season, wdwmaxtemp, mkclose, mkemhmorn) |>\n  ## based on eligibility criteria, limit to 2018\n  filter(year(date) == 2018) |>\n  ## rename variables\n  rename(\n    park_date = date,\n    park_ticket_season = wdw_ticket_season,\n    park_cose = mkclose,\n    park_extra_magic_morning = mkemhmorn\n  )\n```\n:::\n\n\n\n## Working with multiple data sources\n\nFrequently we find ourselves merging data from multiple sources when attempting to answer causal questions in order to ensure that all of the necessary factors are accounted for. The way we can combine datasets is via *joins* -- joining two or more datasets based on a set or sets of common variables. We can think of three main types of *joins*: left, right, and inner. A *left* join combines data from two datasets based on a common variable and includes all records from the *left* dataset along with matching records from the *right* dataset (in `{dplyr}`, `left_join()`), while a *right* join includes all records from the *right* dataset and their corresponding matches from the *left* dataset (in `{dplyr}` `right_join()`); an inner join, on the other hand, includes only the records with matching values in *both* datasets, excluding non-matching records (in `{dplyr}` `inner_join()`. For this analysis, we need to use a left join to pull in the cleaned parks metadata.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseven_dwarfs_train_2018 <- seven_dwarfs_train_2018 |>\n  left_join(parks_metadata_clean, by = \"park_date\")\n```\n:::\n\n\n\n## Recognizing missing data\n\n## Exploring and visualizing data and assumptions\n\n## Presenting descriptive statistics\n",
    "supporting": [
      "chapter-06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}