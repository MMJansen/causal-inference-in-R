{
  "hash": "f26192b6057607931a433cd97ccce286",
  "result": {
    "markdown": "# Causal estimands {#sec-estimands}\n\n\n\n\n\n\n\n## Estimands, Estimators, Estimates\n\nWhen we're conducting an analysis in order to make causal inferences, we need to keep the causal question close to our chest.\nThe causal question helps guide not just the assumptions we need to make but also how we will go about answering the question.\nThis chapter deals with three ideas that are closely related to how we answer causal questions: the estimand, the estimator, and the estimate.\nThe **estimand** is the *target of interest*, the **estimator** is the method by which we approximate this estimand using data, and the **estimate** is the value we get when we plug our data into the estimator.\nYou can think of the **estimand** as glossy picture of a beautiful cake that we are trying to bake, the **estimator** as the recipe, and the **estimate** as the cake that we actually pull out of our oven.\n\nSo far we have been estimating the average treatment effect, that is the effect of the exposure of interest averaged across the whole population.\nThe **estimand** here is the expected value of the difference in potential outcomes across all individuals:\n\n$$E[Y(1) - Y(0)]$$\n\nThe **estimator** we use depends on the method we've chosen.\nFor example, in a randomized controlled trial, our estimator could just be the average outcome among those who received the exposure minus the average outcome among those who did not.\n\n$$\\sum_{i=1}^{N}\\frac{Y_i\\times X_i}{N_{\\textrm{exposed}}} - \\frac{Y_i\\times (1-X_i)}{N_{\\textrm{unexposed}}}$$\n\nWhere $X$ is just an indicator for exposure ($X = 1$ for the exposed and $X = 0$ for the unexposed.) Suppose we have some randomized controlled trial data for 100 participants in a dataset called `rct`.\nHere is some code to simulate such a data set.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nset.seed(928)\nrct <- tibble(\n  # generate the exposure, x, from a binomial distribution\n  # with the probability exposure (the probability x = 1) of 0.5\n  x = rbinom(100, 1, 0.5),\n  # generate the \"true\" average treatment effect of 1\n  # we use rnorm(100) to add the random error term that is normally\n  # distributed with a mean of 0 and a standard deviation of 1\n  y = x + rnorm(100)\n)\n```\n:::\n\n\n\nHere the exposure is `x` and the outcome is `y`.\nThe true average treatment effect is 1.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrct\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 x 2\n       x      y\n   <int>  <dbl>\n 1     0 -0.280\n 2     1  1.87 \n 3     1  1.36 \n 4     0 -0.208\n 5     0  1.13 \n 6     1  0.352\n 7     1 -0.148\n 8     1  2.08 \n 9     0  2.09 \n10     0 -1.41 \n# ... with 90 more rows\n```\n:::\n:::\n\n\n\nBelow are two ways to estimate this in R.\nIn the first example, we calculate the difference in `y` between exposure values using a formula approach\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrct |>\n  summarise(\n    n_exposed = sum(x),\n    n_unexposed = sum(1 - x),\n    estimate = sum(\n      (y * x) / n_exposed -\n        y * (1 - x) / n_unexposed\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 3\n  n_exposed n_unexposed estimate\n      <int>       <dbl>    <dbl>\n1        54          46     1.15\n```\n:::\n:::\n\n\n\nAlternatively, we can `group_by()` `x` and `summarize()` the means of `y` for each group, then pivot the results to take their difference.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrct |>\n  group_by(x) |>\n  summarise(avg_y = mean(y)) |>\n  pivot_wider(\n    names_from = x,\n    values_from = avg_y,\n    names_prefix = \"x_\"\n  ) |>\n  summarise(estimate = x_1 - x_0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 1\n  estimate\n     <dbl>\n1     1.15\n```\n:::\n:::\n\n\n\nBecause $X$, the exposure, was randomly assigned, this estimator results in an unbiased estimate of our estimand of interest.\n\nWhat do we mean by unbiased, though?\nNotice here that while the \"true\" causal effect is 1, this estimate is not exactly 1, it is 1.149.\nWhy the difference?\nThis randomized controlled trial was run on a sample of 100 participants, not the whole population.\nAs that sample increases, our estimate will get closer to the truth.\nLet's try that.\nLet's simulate the data again, but increase the sample size from 100 to 100,000\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(928)\nrct <- tibble(\n  x = rbinom(100000, 1, 0.5),\n  y = x + rnorm(100000)\n)\n\nrct |>\n  summarise(\n    n_exposed = sum(x),\n    n_unexposed = sum(1 - x),\n    estimate = sum(\n      (y * x) / n_exposed -\n        y * (1 - x) / n_unexposed\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 3\n  n_exposed n_unexposed estimate\n      <int>       <dbl>    <dbl>\n1     49918       50082     1.01\n```\n:::\n:::\n\n\n\nNotice now the estimate is 1.01, much closer to the true average treatment effect, 1.\n\nIf $X$ had not been randomly assigned, we could use the pre-exposure covariates to estimate the conditional probability of $X$ (the propensity score), and incorporate this probability in a *weight* $(w_i)$ to estimate this causal effect.\nFor example, we could use the following *estimator* to *estimate* our average treatment effect *estimand*:\n\n$$\\frac{\\sum_{i=1}^NY_i\\times X_i\\times w_i}{\\sum_{i=1}^NX_i\\times w_i}-\\frac{\\sum_{i=1}^NY_i\\times(1-X_i)\\times w_i}{\\sum_{i=1}^N(1-X_i)\\times w_i}$$\n\n## Estimating treatment effects with specific targets in mind\n\nDepending on the goal of the study, or the causal question at hand, we may want to estimate different *estimands*.\nHere, we will outline the most common causal estimands, their target populations, the causal questions they may help answer, and the methods used to estimate them [@greifer2021choosing].\n\n### Average treatment effect\n\nA common estimand is the average treatment effect (ATE).\nThe target population is the *full sample* or population of interest.\nThe **estimand** here is the expected value of the difference in potential outcomes across all individuals:\n\n$$E[Y(1) - Y(0)]$$\n\nAn example research question is \"Should a policy be applied to all eligible patients?\" [@greifer2021choosing].\n\nMost randomized controlled trials are designed with the ATE as the target estimand.\nIn a non-randomized setting, the ATE can be estimated using full matching, where each observation in the exposed group is matched to at least one observation in the control group (and vice versa) without replacement.\nAlternatively, the following inverse probability weight will allow for the ATE to be estimated using propensity score weighting.\n\n$$w_{ATE} = \\frac{X}{p} + \\frac{(1 - X)}{1 - p}$$\n\nIn other words, the weight is one over the propensity score for those in the exposure group and one over one minus the propensity score for the control group.\nIntuitively, this weight equates to the inverse probability of being in the exposure group that you were observed to be in.\n\nLet's dig a bit deeper into this causal estimand using the Touring Plans data.\nRecall in @sec-using-ps we examined the relationship between whether there were \"Extra Magic Hours\" in the morning and the average wait time for the Seven Dwarfs Mine Train the same day between 5pm and 6pm.\nLet's reconstruct our data set, `seven_dwarfs` and fit the same propensity score model specified previously.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\nlibrary(touringplans)\n\nseven_dwarfs <- seven_dwarfs_train_2018 |>\n  filter(hour == 17) |>\n  mutate(extra_magic_morning = factor(\n    extra_magic_morning,\n    labels = c(\"No Magic Hours\", \"Extra Magic Hours\")\n  ))\n\nseven_dwarfs_with_ps <- glm(\n  extra_magic_morning ~ wdw_ticket_season + close + weather_wdwhigh,\n  data = seven_dwarfs,\n  family = binomial()\n) |>\n  augment(type.predict = \"response\", data = seven_dwarfs)\n```\n:::\n\n\n\nLet's examine a table of the variables of interest in this data frame.\nTo do so, we are going to use the `tbl_summary()` function from the {gtsummary} package.\n(We'll also use the {labelled} package to clean up the variable names for the table.)\n\n\n\n::: {#tbl-unweighted-gtsummary .cell tbl-cap='A descriptive table of Extra Magic Morning in the touringplans dataset. This table shows the distributions of these variables in the observed population.'}\n\n```{.r .cell-code}\nlibrary(gtsummary)\nlibrary(labelled)\nseven_dwarfs_with_ps <- seven_dwarfs_with_ps |>\n  set_variable_labels(\n    wdw_ticket_season = \"Ticket Season\",\n    close = \"Close Time\",\n    weather_wdwhigh = \"Historic High Temperature\"\n  )\n\ntbl_summary(seven_dwarfs_with_ps,\n  by = extra_magic_morning,\n  include = c(wdw_ticket_season, close, weather_wdwhigh)\n) |>\n  add_overall(last = TRUE) # add an overall column to the table\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**Characteristic**        | **No Magic Hours**, N = 291 | **Extra Magic Hours**, N = 56 | **Overall**, N = 347 |\n|:-------------------------|:---------------------------:|:-----------------------------:|:--------------------:|\n|Ticket Season             |                             |                               |                      |\n|peak                      |          61 (21%)           |           17 (30%)            |       78 (22%)       |\n|regular                   |          154 (53%)          |           32 (57%)            |      186 (54%)       |\n|value                     |          76 (26%)           |            7 (12%)            |       83 (24%)       |\n|Close Time                |                             |                               |                      |\n|18:00:00                  |          38 (13%)           |           18 (32%)            |       56 (16%)       |\n|20:00:00                  |          19 (6.5%)          |           2 (3.6%)            |      21 (6.1%)       |\n|21:00:00                  |          27 (9.3%)          |            0 (0%)             |      27 (7.8%)       |\n|22:00:00                  |          91 (31%)           |            9 (16%)            |      100 (29%)       |\n|23:00:00                  |          76 (26%)           |           10 (18%)            |       86 (25%)       |\n|24:00:00                  |          39 (13%)           |           16 (29%)            |       55 (16%)       |\n|25:00:00                  |          1 (0.3%)           |           1 (1.8%)            |       2 (0.6%)       |\n|Historic High Temperature |         83 (76, 90)         |          79 (71, 89)          |     83 (75, 90)      |\n:::\n:::\n\n\n\nFrom @tbl-unweighted-gtsummary, there were 291 days that did not have extra magic hours in the morning and 56 that did.\nWe also see 30% of the extra magic mornings were during peak season compared to 21% of the non-extra magic mornings that were during peak season.\nAdditionally, days that had extra magic mornings were more likely to close at 6pm (18:00:00) compared to non-magic hour mornings.\nThe median temperature on days with extra magic hour mornings is a bit lower (79 degrees) compared to non-extra magic hour morning days.\n\nNow let's construct our propensity score weight to estimate the ATE.\nThe {propensity} package has helper functions to allow you to estimate weights.\nThe `wt_ate` function will calculate ATE weights.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(propensity)\nseven_dwarfs_wts <- seven_dwarfs_with_ps |>\n  mutate(w_ate = wt_ate(.fitted, extra_magic_morning))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni Setting treatment to `Extra Magic Hours`\n```\n:::\n:::\n\n\n\nLet's look at a distribution of these weights\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(x = w_ate)) +\n  geom_histogram(bins = 50)\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-11-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nHere we see that many weights are close to 1 (the smallest possible value for an ATE weight) with a long tail leading to the largest weight (around 24).\nThis distribution highlights a potential problem with ATE weights.\nThey range from 1 to infinity; in small samples, if your weights are too large this can lead to bias in your estimates (known as finite sample bias).\n\nThe {gtsummary} package allows the creation of *weighted* tables, which can help us build an intuition for the psuedopopulation created by the weights.\nTo do this, we need to load the {survey} package and create a survey design object.\nThe {survey} package has great support for calculating statistics and models using weights.\nHistorically, the techniques needed to incorporate weights were used for survey analyses.\nEven though we are not doing a survey analysis, the same techniques are useful for our propensity score weights.\n\n\n\n::: {#tbl-weighted-gtsummary .cell tbl-cap='A descriptive table of Extra Magic Morning hours weighted by the Average Treatment Effect Weights. This table shows the distributions of these variables in the psuedopopulation created by these weights.'}\n\n```{.r .cell-code}\nlibrary(survey)\nseven_dwarfs_svy <- svydesign(\n  ids = ~1,\n  data = seven_dwarfs_wts,\n  weights = ~w_ate\n)\ntbl_svysummary(seven_dwarfs_svy,\n  by = extra_magic_morning,\n  include = c(wdw_ticket_season, close, weather_wdwhigh)\n) |>\n  add_overall(last = TRUE) # add an overall column to the table\n```\n\n::: {.cell-output-display}\n|**Characteristic**        | **No Magic Hours**, N = 347 | **Extra Magic Hours**, N = 349 | **Overall**, N = 696 |\n|:-------------------------|:---------------------------:|:------------------------------:|:--------------------:|\n|Ticket Season             |                             |                                |                      |\n|peak                      |          78 (22%)           |            72 (21%)            |      150 (22%)       |\n|regular                   |          186 (54%)          |           189 (54%)            |      375 (54%)       |\n|value                     |          83 (24%)           |            89 (25%)            |      172 (25%)       |\n|Close Time                |                             |                                |                      |\n|18:00:00                  |          52 (15%)           |            80 (23%)            |      132 (19%)       |\n|20:00:00                  |          22 (6.2%)          |           17 (4.7%)            |      38 (5.5%)       |\n|21:00:00                  |          30 (8.6%)          |             0 (0%)             |      30 (4.3%)       |\n|22:00:00                  |          106 (30%)          |            81 (23%)            |      187 (27%)       |\n|23:00:00                  |          90 (26%)           |            89 (25%)            |      179 (26%)       |\n|24:00:00                  |          47 (14%)           |            79 (23%)            |      126 (18%)       |\n|25:00:00                  |          1 (0.3%)           |            4 (1.2%)            |       5 (0.8%)       |\n|Historic High Temperature |         82 (75, 90)         |          84 (72, 91)           |     83 (74, 90)      |\n:::\n:::\n\n\n\nNotice in @tbl-weighted-gtsummary, the variables are more **balanced** between the groups.\nFor example, looking at the variable `wdw_ticket_season`, in @tbl-unweighted-gtsummary we see that a higher percent of the days with extra magic hours in the mornings were during the peak season (30%) compared to the percent of days without extra magic hours in the morning (21%).\nIn @tbl-weighted-gtsummary this is balanced, with a weighted percent of 21% peak days in the extra magic morning group and 22% in the no extra magic morning group.\nThe weights here are changing the distribution of the variables by weighting each of the observations so that the two groups appear balanced.\nAlso notice that the distribution of variables in @tbl-weighted-gtsummary now matches the Overall column of @tbl-unweighted-gtsummary.\nThat is what ATE weights do: they make the distribution of variables included in the propensity score for each exposure group look like the overall distribution across the whole sample.\n\nLet's look at another visualization that can help us understand the weighted psuedopopulation that is created by the ATE weights: a mirrored histogram.\nWe will plot the distribution of the propensity score for the days in the \"exposure\" group (days with extra magic hours in the morning) on the top half of the plot, then we will mirror the distribution of the propensity score for the days in the \"unexposed\" group below it.\nThis allows us to easily visually compare the two distributions.\nThen we will overlay weighted histograms to demonstrate how these distributions differ after incorporating the weights.\nThe {halfmoon} package includes a function `geom_mirror_histogram` to assist with this visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(halfmoon)\nggplot(seven_dwarfs_wts, aes(.fitted, group = extra_magic_morning)) +\n  geom_mirror_histogram(\n    bins = 50\n  ) +\n  geom_mirror_histogram(\n    aes(fill = factor(extra_magic_morning), weight = w_ate),\n    bins = 50,\n    alpha = 0.5\n  ) +\n  scale_y_continuous(labels = abs) +\n  labs(\n    x = \"propensity score\",\n    fill = \"Extra Magic Morning\"\n  )\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nWe can learn a few things from this figure.\nFirst, we can readily see that there are more \"unexposed\" days, that is days without extra magic hours in the morning, compared to \"exposed\" in the observed population.\nWe can see this by examining the darker histograms, which show the distributions in the observed sample.\nIn the same vein, the exposed days are \"upweighted\" to a stronger degree, as evidenced by the amount of light blue we see on the top.\nWe can also see that after weighting the two distributions look similar, that is the shape of the blue weighted distribution on top looks similar to the red weighted distribution below.\n\n### Average treatment effect among the treated\n\nThe target population to estimate the average treatment effect among the treated (ATT) is the *exposed* (treated) population.\nThe causal estimand conditions on those in the exposed group.\n\n$$E[Y(1) - Y(0) | X = 1]$$\n\nExample research questions where the ATT is of interest could include \"Should we stop our marketing campaign to those currently receiving it?\" or \"Should medical providers stop recommending treatment for those currently receiving it?\"[@greifer2021choosing]\n\nThe ATT weight is estimated by:\n\n$$w_{ATT} = X + \\frac{(1 - X)p}{1 - p}$$\n\nLet's add the ATT weights to the `seven_dwarfs_wts` data frame and look at their distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseven_dwarfs_wts <- seven_dwarfs_wts |>\n  mutate(w_att = wt_att(.fitted, extra_magic_morning))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni Setting treatment to `Extra Magic Hours`\n```\n:::\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(w_att)) +\n  geom_histogram(bins = 50)\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-14-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nCompared to the ATE weights, these weights look more *stable*, that is, the distribution of the weights is not heavily skewed and the range is small, from around zero to a bit over one, with many at exactly one.\nThese weights are exactly one for all days in the exposed group.\nTheoretically, for unexposed days these weights can range from zero to infinity, but because we have many more unexposed days compared to exposed in this particular sample, the range is much smaller, meaning the vast majority of unexposed days are \"down weighted\" to match the variable distribution of the exposed days.\nLet's take a look at the weighted table to see this a bit more clearly.\n\n\n\n::: {#tbl-weighted-att .cell tbl-cap='A descriptive table of Extra Magic Morning hours weighted by the Average Treatment Effect among the Treated Weights. This table shows the distributions of these variables in the psuedopopulation created by these weights.'}\n\n```{.r .cell-code}\nseven_dwarfs_svy <- svydesign(\n  ids = ~1,\n  data = seven_dwarfs_wts,\n  weights = ~w_att\n)\ntbl_svysummary(seven_dwarfs_svy,\n  by = extra_magic_morning,\n  include = c(wdw_ticket_season, close, weather_wdwhigh)\n) |>\n  add_overall(last = TRUE) # add an overall column to the table\n```\n\n::: {.cell-output-display}\n|**Characteristic**        | **No Magic Hours**, N = 56 | **Extra Magic Hours**, N = 56 | **Overall**, N = 112 |\n|:-------------------------|:--------------------------:|:-----------------------------:|:--------------------:|\n|Ticket Season             |                            |                               |                      |\n|peak                      |          17 (30%)          |           17 (30%)            |       34 (30%)       |\n|regular                   |          32 (58%)          |           32 (57%)            |       64 (57%)       |\n|value                     |          7 (13%)           |            7 (12%)            |       14 (13%)       |\n|Close Time                |                            |                               |                      |\n|18:00:00                  |          14 (25%)          |           18 (32%)            |       32 (28%)       |\n|20:00:00                  |          3 (4.6%)          |           2 (3.6%)            |       5 (4.1%)       |\n|21:00:00                  |          3 (5.0%)          |            0 (0%)             |       3 (2.5%)       |\n|22:00:00                  |          15 (26%)          |            9 (16%)            |       24 (21%)       |\n|23:00:00                  |          14 (25%)          |           10 (18%)            |       24 (22%)       |\n|24:00:00                  |          8 (14%)           |           16 (29%)            |       24 (21%)       |\n|25:00:00                  |          0 (0.2%)          |           1 (1.8%)            |       1 (1.0%)       |\n|Historic High Temperature |        79 (73, 87)         |          79 (71, 89)          |     79 (72, 89)      |\n:::\n:::\n\n\n\nWe again acheive balance between groups, but the target values in @tbl-weighted-att differ from the previous tables.\nRecall in our ATE weighted table (@tbl-weighted-gtsummary), when looking at the `wdw_ticket_season` variable we saw the weighted percent in the peak season balanced close to 22%, the overall percent of peak days in the observed sample.\nNow, we again see balance, but the weighted percent of peak season days is 30% in the exposed and unexposed groups, reflecting the percent in the unweighted exposure group.\nComparing this weighted table to our unweighted table (@tbl-unweighted-gtsummary), all columns are attempting to match the exposed column from the unweighted table, that is the \"target\" population is the exposed group, the days with extra magic hours in the morning.\n\nWe can again create a mirrored histogram to observe the weighted psuedopopulation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(.fitted, group = extra_magic_morning)) +\n  geom_mirror_histogram(\n    bins = 50\n  ) +\n  geom_mirror_histogram(\n    aes(fill = factor(extra_magic_morning), weight = w_att),\n    bins = 50,\n    alpha = 0.5\n  ) +\n  scale_y_continuous(labels = abs) +\n  labs(\n    x = \"propensity score\",\n    fill = \"Extra Magic Morning\"\n  )\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-16-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nSince every day in the exposed group has a weight of 1, the distribution of the propensity scores (the dark bars above 0 on the graph) exactly overlap with the weighted distribution overlaid in blue.\nIn the unexposed population, we see that almost all observations are *down weighted*, that is the dark red distribution is smaller than the distribution of the propensity scores and more closely matches the exposed distribution above it.\nWhen there are many more observations in the unexposed group compared to the exposed, as we see here, the ATT is easier to estimate.\n\n### Average treatment effect among the unexposed\n\nThe target population to estimate the average treatment effect among the unexposed (control) (ATU / ATC) is the *unexposed* (control) population.\nThe causal estimand conditions on those in the unexposed group.\n\n$$E[Y(1) - Y(0) | X = 0]$$\n\nExample research questions where the ATC is of interest could include \"Should we send our marketing campaign to those not currently receiving it?\" or \"Should medical providers begin recommending treatment for those not currently receiving it?\"[@greifer2021choosing]\n\nThe ATU weight is estimated by:\n\n$$w_{ATU} = \\frac{X(1-p)}{p}+ (1-X)$$ Let's add the ATU weights to the `seven_dwarfs_wts` data frame and look at their distribution.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseven_dwarfs_wts <- seven_dwarfs_wts |>\n  mutate(w_atu = wt_atu(.fitted, extra_magic_morning))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni Setting treatment to `Extra Magic Hours`\n```\n:::\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(w_atu)) +\n  geom_histogram(bins = 50)\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-17-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nThe distribution of these weights looks very similar to what we saw with the ATE weights -- several around 1, with a long tail.\nThese weights will be 1 for all observations in the unexposed group; they can range from 0 to infinity for the exposed group.\nBecause we have more observations in our unexposed group, our exposed observations are forced to be \"up weighted\" to match their distribution.\n\nNow let's take a look at the weighted table.\n\n\n\n::: {#tbl-weighted-atu .cell tbl-cap='A descriptive table of Extra Magic Morning hours weighted by the Average Treatment Effect among the Untreated Weights. This table shows the distributions of these variables in the psuedopopulation created by these weights.'}\n\n```{.r .cell-code}\nseven_dwarfs_svy <- svydesign(\n  ids = ~1,\n  data = seven_dwarfs_wts,\n  weights = ~w_atu\n)\ntbl_svysummary(seven_dwarfs_svy,\n  by = extra_magic_morning,\n  include = c(wdw_ticket_season, close, weather_wdwhigh)\n) |>\n  add_overall(last = TRUE) # add an overall column to the table\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**Characteristic**        | **No Magic Hours**, N = 291 | **Extra Magic Hours**, N = 293 | **Overall**, N = 584 |\n|:-------------------------|:---------------------------:|:------------------------------:|:--------------------:|\n|Ticket Season             |                             |                                |                      |\n|peak                      |          61 (21%)           |            55 (19%)            |      116 (20%)       |\n|regular                   |          154 (53%)          |           157 (53%)            |      311 (53%)       |\n|value                     |          76 (26%)           |            82 (28%)            |      158 (27%)       |\n|Close Time                |                             |                                |                      |\n|18:00:00                  |          38 (13%)           |            62 (21%)            |      100 (17%)       |\n|20:00:00                  |          19 (6.5%)          |           15 (4.9%)            |      34 (5.7%)       |\n|21:00:00                  |          27 (9.3%)          |             0 (0%)             |      27 (4.6%)       |\n|22:00:00                  |          91 (31%)           |            72 (25%)            |      163 (28%)       |\n|23:00:00                  |          76 (26%)           |            79 (27%)            |      155 (26%)       |\n|24:00:00                  |          39 (13%)           |            63 (21%)            |      102 (17%)       |\n|25:00:00                  |          1 (0.3%)           |            3 (1.1%)            |       4 (0.7%)       |\n|Historic High Temperature |         83 (75, 90)         |          84 (73, 91)           |     84 (75, 91)      |\n:::\n:::\n\n\n\nNow the exposed column of @tbl-weighted-atu is weighted to match the unexposed column of the unweighted table.\n\nWe can again create a mirrored histogram to observe the weighted psuedopopulation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(.fitted, group = extra_magic_morning)) +\n  geom_mirror_histogram(\n    bins = 50\n  ) +\n  geom_mirror_histogram(\n    aes(fill = factor(extra_magic_morning), weight = w_atu),\n    bins = 50,\n    alpha = 0.5\n  ) +\n  scale_y_continuous(labels = abs) +\n  labs(\n    x = \"propensity score\",\n    fill = \"Extra Magic Morning\"\n  )\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-19-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nThe weights for the unexposed days are all 1, so the distribution of the propensity scores for this group exactly overlays the weighted pseudopopulation in red.\nThe blue bars indicate that the exposed population is largely \"up weighted\" to match the unexposed distribution.\n\n### Average treatment effect among the evenly matchable\n\nThe target population to estimate the average treatment effect among the evenly matchable (ATM) is the evenly matchable.\nThe causal estimand conditions on those deemed \"evenly matchable\" by some distance metric.\n\n$$E[Y(1) - Y(0) | M_d = 1]$$\n\nHere $d$ denotes a distance measure and $M_d=1$ indicates that a unit is evenly matchable under that distance measure.[@samuels2017aspects; @d2018improving] Example research questions where the ATM is of interest could include \"Should those at clinical equipoise receive the exposure?\"[@greifer2021choosing]\n\nThe ATM weight is estimated by:\n\n$$w_{ATM} = \\frac{\\min \\{p, 1-p\\}}{Xp + (1-X)(1-p)}$$\n\nLet's add the ATM weights to the `seven_dwarfs_wts` data frame and look at their distribution.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseven_dwarfs_wts <- seven_dwarfs_wts |>\n  mutate(w_atm = wt_atm(.fitted, extra_magic_morning))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni Setting treatment to `Extra Magic Hours`\n```\n:::\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(w_atm)) +\n  geom_histogram(bins = 50)\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-20-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nThe distribution of these weights looks very similar to what we saw with the ATT weights.\nThat is because in this particular sample, there are many more unexposed observations compared to exposed.\nThese weights have the nice property that they range from 0 to 1, making them *always* stable, regardless of the imbalance between exposure groups.\n\nNow let's take a look at the weighted table.\n\n\n\n::: {#tbl-weighted-atm .cell tbl-cap='A descriptive table of Extra Magic Morning hours weighted by the Average Treatment Effect among the Evenly Matchable Weights. This table shows the distributions of these variables in the psuedopopulation created by these weights.'}\n\n```{.r .cell-code}\nseven_dwarfs_svy <- svydesign(\n  ids = ~1,\n  data = seven_dwarfs_wts,\n  weights = ~w_atm\n)\ntbl_svysummary(seven_dwarfs_svy,\n  by = extra_magic_morning,\n  include = c(wdw_ticket_season, close, weather_wdwhigh)\n) |>\n  add_overall(last = TRUE) # add an overall column to the table\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**Characteristic**        | **No Magic Hours**, N = 56 | **Extra Magic Hours**, N = 56 | **Overall**, N = 112 |\n|:-------------------------|:--------------------------:|:-----------------------------:|:--------------------:|\n|Ticket Season             |                            |                               |                      |\n|peak                      |          17 (30%)          |           17 (30%)            |       34 (30%)       |\n|regular                   |          32 (58%)          |           32 (57%)            |       64 (57%)       |\n|value                     |          7 (13%)           |            7 (13%)            |       14 (13%)       |\n|Close Time                |                            |                               |                      |\n|18:00:00                  |          14 (25%)          |           18 (32%)            |       32 (28%)       |\n|20:00:00                  |          3 (4.6%)          |           2 (3.6%)            |       5 (4.1%)       |\n|21:00:00                  |          3 (5.0%)          |            0 (0%)             |       3 (2.5%)       |\n|22:00:00                  |          15 (26%)          |            9 (16%)            |       24 (21%)       |\n|23:00:00                  |          14 (25%)          |           10 (18%)            |       24 (22%)       |\n|24:00:00                  |          8 (14%)           |           16 (29%)            |       24 (21%)       |\n|25:00:00                  |          0 (0.2%)          |           1 (1.8%)            |       1 (1.0%)       |\n|Historic High Temperature |        79 (73, 87)         |          79 (71, 89)          |     79 (73, 89)      |\n:::\n:::\n\n\n\nIn this particular sample, the ATM weights resemble the ATT weights, so this table looks similar to the ATT weighted table.\nThis is not guaranteed, and in fact the ATM pseudopopulation can look different from the overall, exposed, and unexposed unweighted populations.\nThis makes it particularly important to examine the weighted table when using ATM weights to be sure to understand what population inference will ultimately be drawn on.\n\nWe can again create a mirrored histogram to observe the ATM weighted psuedopopulation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(.fitted, group = extra_magic_morning)) +\n  geom_mirror_histogram(\n    bins = 50\n  ) +\n  geom_mirror_histogram(\n    aes(fill = factor(extra_magic_morning), weight = w_atm),\n    bins = 50,\n    alpha = 0.5\n  ) +\n  scale_y_continuous(labels = abs) +\n  labs(\n    x = \"propensity score\",\n    fill = \"Extra Magic Morning\"\n  )\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-22-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nAgain, the ATM weights are bounded by 0 and 1, meaning that all observations will be *down weighted*.\nThis removes the potential for finite sample bias due to large weights in small samples as well as has improved variance properities.\n\n### Average treatment effect among the overlap population\n\nThe target population to estimate the average treatment effect among the overlap population (ATO) is the overlap -- this is very similar to the \"even matchable\" from above.\nExample research questions where the ATO is of interest are the same as those for the ATM, such as \"Should those at clinical equipoise receive the exposure?\"[@greifer2021choosing]\n\nThese weights, again, are quite similar to the ATM weights but are slightly attenuated, yielding improved variance properties.\n\nThe ATO weight is estimated by:\n\n$$w_{ATO} = X(1-p) + (1-X)p$$\n\nLet's add the ATO weights to the `seven_dwarfs_wts` data frame and look at their distribution.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseven_dwarfs_wts <- seven_dwarfs_wts |>\n  mutate(w_ato = wt_ato(.fitted, extra_magic_morning))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni Setting treatment to `Extra Magic Hours`\n```\n:::\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(w_ato)) +\n  geom_histogram(bins = 50)\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-23-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nLike the ATM weights, the ATO weights are bounded by 0 and 1, making them more stable than the ATE, ATT, and ATU, regardless of the exposed and unexposed imbalance.\n\nNow let's take a look at the weighted table.\n\n\n\n::: {#tbl-weighted-ato .cell tbl-cap='A descriptive table of Extra Magic Morning hours weighted by the Average Treatment Effect among the Overlap Population Weights. This table shows the distributions of these variables in the psuedopopulation created by these weights.'}\n\n```{.r .cell-code}\nseven_dwarfs_svy <- svydesign(\n  ids = ~1,\n  data = seven_dwarfs_wts,\n  weights = ~w_ato\n)\ntbl_svysummary(seven_dwarfs_svy,\n  by = extra_magic_morning,\n  include = c(wdw_ticket_season, close, weather_wdwhigh)\n) |>\n  add_overall(last = TRUE) # add an overall column to the table\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**Characteristic**        | **No Magic Hours**, N = 45 | **Extra Magic Hours**, N = 45 | **Overall**, N = 90 |\n|:-------------------------|:--------------------------:|:-----------------------------:|:-------------------:|\n|Ticket Season             |                            |                               |                     |\n|peak                      |          13 (29%)          |           13 (29%)            |      25 (29%)       |\n|regular                   |          25 (57%)          |           25 (57%)            |      51 (57%)       |\n|value                     |          6 (14%)           |            6 (14%)            |      13 (14%)       |\n|Close Time                |                            |                               |                     |\n|18:00:00                  |          9 (21%)           |           13 (29%)            |      23 (25%)       |\n|20:00:00                  |          2 (5.1%)          |           2 (3.9%)            |      4 (4.5%)       |\n|21:00:00                  |          2 (5.3%)          |            0 (0%)             |      2 (2.7%)       |\n|22:00:00                  |          12 (28%)          |            8 (18%)            |      20 (23%)       |\n|23:00:00                  |          12 (26%)          |            9 (19%)            |      20 (23%)       |\n|24:00:00                  |          6 (14%)           |           12 (28%)            |      19 (21%)       |\n|25:00:00                  |          0 (0.2%)          |           1 (1.7%)            |      1 (1.0%)       |\n|Historic High Temperature |        80 (74, 88)         |          80 (71, 90)          |     80 (73, 89)     |\n:::\n:::\n\n\n\nLike the ATM weights, the ATO pseudopopulation may not resemble the overall, exposed, or unexposed unweighted populations, so it is important to examine these weighted tables to gain a deeper understanding about the population on whom we will be drawing inference.\n\nWe can again create a mirrored histogram to observe the ATO weighted psuedopopulation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(seven_dwarfs_wts, aes(.fitted, group = extra_magic_morning)) +\n  geom_mirror_histogram(\n    bins = 50\n  ) +\n  geom_mirror_histogram(\n    aes(fill = factor(extra_magic_morning), weight = w_ato),\n    bins = 50,\n    alpha = 0.5\n  ) +\n  scale_y_continuous(labels = abs) +\n  labs(\n    x = \"propensity score\",\n    fill = \"Extra Magic Morning\"\n  )\n```\n\n::: {.cell-output-display}\n![](chapter-10_files/figure-pdf/unnamed-chunk-25-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nThis looks similar to the ATM pseudopopulation, with slight attenuation, as evidenced by the increased down weighting in the exposed population.\nWe generally prefer using the ATO weights when the overlap (or evenly matchable) population is the target, as they have improved variance properties.\nThey additionally have the benefit that any variables included in the propensity score model (if fit via logistic regression) will be perfectly balanced on the mean.\nWe will discuss this further in future chapters.\n\n## Choosing estimands\n",
    "supporting": [
      "chapter-10_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}