{
  "hash": "d9571bf9dc8f31ff76d901fcc6618c58",
  "result": {
    "markdown": "# Expressing causal questions as DAGs {#sec-dags}\n\n\n\n\n\n## Visualizing Causal Assumptions\n\n> Draw your assumptions before your conclusions --@hernan2021\n\nCausal diagrams are a tool to visualize your assumptions about the causal structure of the questions you're trying to answer. In a randomized experiment, the causal structure is quite simple: while there may be many causes of an outcome, the only cause of the exposure is the randomization process itself (we hope!). In many non-randomized settings, however, the structure of your question can be a complex web of causality. Causal diagrams help communicate what we think this structure looks like. In addition to being open about what we think the causal structure is, causal diagrams have incredible mathematics properties that allow us to identify a way to estimate unbiased causal effects even with observational data.\n\nThe type of causal diagrams we use are also called directed acyclic graphs (DAGs). These graphs are directed because they include arrows going in a specific direction. They're acyclic because they don't go in circles; a variable can't cause itself, for instance. DAGs are used for a wide variety of problems, but we're specificaly concerned with *causal* DAGs. This class of DAGs is also sometimes referred to as Structural Causal Models (SCMs) because they are a model of the causal structure of a question. \n\n::: {.callout-tip}\n## DAGs down under\n\nWe highly recommend asking an Australian friend about DAGs. \n:::\n\nDAGs depict causal relationships between variables. Visually, the way they depict variables is as *edges* and *nodes*. Edges are the arrows going from one variable to another, also sometimes called arcs or just arrows. Nodes are the variables themselves, sometimes called vertices, points, or just variables. in @fig-dag-basic, there are two nodes: `x` and `y` and one edge going from `x` to `y`. Here, we are saying that `x` causes `y`. In some capacity, `y` \"listens\" to `x`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](chapter-05_files/figure-html/fig-dag-basic-1.png){#fig-dag-basic width=288}\n:::\n:::\n\n\nIf we're interested in the causal effect of `x` on `y`, we're trying to estimate a numeric representation of that arrow. Usually, though, there are many other variables and arrows in the causal structure of a given question. A series of arrows is called a *path*. There are three types of paths you'll see in DAGs: forks, chains, and colliders (sometimes called inverse forks).\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](chapter-05_files/figure-html/fig-dag-path-types-1.png){#fig-dag-path-types width=672}\n:::\n:::\n\n\nForks represent a common cause of two variables. Here, we're saying that `q` causes both `x` and `y`. This is the traditional definition of a confounder. They're called forks because the arrows from `x` to `y` are in different directions. Chains, on the other hand, represent a series of arrows going in the same direction. Here `q` is called a *mediator*: it is along the causal path from `x` to `y`. In this diagram, the only path from `x` to `y` is the one mediated through `q`. Finally, a collider is a path where two arrowheads meet at a variable. Because causality always goes forward in time, this naturally means that the collider variable is caused by two other variables. Here, we're saying that `x` and `y` both cause `q`.\n\n::: {.callout-tip}\n## Are DAGs SEMs?\nIf you're familiar with structural equation models (SEMs), a modeling technique commonly used in psychology and other social science settings, you may notice some similarities between SEMs and DAGs. In fact, DAGs are a form of *non-parametric* SEM. SEMs estimate entire graphs using parametric assumptions. Causal DAGs, on the other hand, don't estimate anything; an arrow going from one variable to another says nothing about the strength or functional form of that relationship, only that we think it exists.\n:::\n\nOne of the major benefits of DAGs is that they help us identify sources of bias and, often, provide clues in how to address them. However, talking about an unbiased effect estimate only makes sense when we have a specific causal question in mind. Since each arrow represents a cause, it's causality all the way down, so no individual arrow is inherently problematic. Here, we're interested in the effect of `x` on `y`. This question defines which paths we're interested in and which we're not. \n\nThese three types of paths have different implications for the statistical relationship between `x` and `y`. If we only look at the correlation between the two variables under these assumptions:\n\n1. In the fork, `x` and `y` will be associated, despite there being no arrow from `x` to `y`.\n2. In the chain, `x` and `y` are related but only through `q`.\n3. In the collider, `x` and `y` will *not* be related.\n\nPaths that transmit association are called *open paths*. Paths that do not transmit association are called *closed paths*. Forks and chains are open while colliders are closed. \n\nSo, should we adjust for `q`? That depends on the nature of the path. Forks are confounding paths. Because `q` causes both `x` and `y`, `x` and `y` will have a spurious association. They both contain information from `q`, their mutual cause, and that mutual causal relationship makes `x` and `y` associated statistically. Adjusting for `q` will *block* the bias from confounding and give us the true relationship between `x` and `y`. \n\n::: {.callout-tip}\n## Adjustment\nWe can use a variety of techniques to account for a variable. We use the term \"adjustment\" to generally refer to any technique that removes the effect of variables we're not interested in.\n:::\n\n@fig-confounder-scatter depicts this effect visually. Here, `x` and `y` are continuous, and by definition of the DAG, they are unrelated. `q`, however, causes both. The unadjusted effect is biased because it includes information about the open path from `x` to `y` via `z`. Within levels of `z`, however, `x` and `y` are unrelated. \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](chapter-05_files/figure-html/fig-confounder-scatter-1.png){#fig-confounder-scatter width=672}\n:::\n:::\n\n\nFor chains, whether or not we adjusting for mediators depends on the research question. Here, adjusting for `q` would result in a null estimate of the effect of `x` on `y`. Because the only effect of `x` on `y` is via `q`, no other effect remains. The effect of `x` on `y` mediated by `q` is called the *indirect* effect, while the effect of `x` on `y` directly is called the *direct* effect. If we're only interested in the direct effect, controlling for `q` might be what we want. If we want to know about both effects, we shouldn't try to adjust for `q`. We'll learn more estimating different mediation effects in @sec-mediation.\n\n@fig-mediator-scatter shows this effect visually. The unadjusted effect of `x` on `y` represents the total effect. Since the total effect is due entirely to the path mediated by `q`, when we adjust for `q`, no relationship remains. This is the direct effect. Neither of these effects is due to bias but rather each answers a different research question. \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](chapter-05_files/figure-html/fig-mediator-scatter-1.png){#fig-mediator-scatter width=672}\n:::\n:::\n\n\nColliders are different. In the collider DAG of @fig-dag-path-types, `x` and `y` are *not* associated, but both cause `q`. Adjusting for `q` has the opposite effect than with confounding: it *opens* a biasing pathway. Sometimes, people draw the path opened up by conditioning on a collider connecting `x` and `y`. \n\nVisually, we can see this happen when `x` and `y` are continuous and `q` is binary. In @fig-collider-scatter, when we don't include `q`, we find there is no relationship between `x` and `y`. That's the correct result. However, when we include `q`, we can detect information about both `x` and `y`, and they appear correlated: across levels of `x`, those with `q = 0` have lower levels of `y`. Association seemingly flows back in time. Of course, that can't happen from a causal perspective, so controlling for `q` is the wrong thing to do. We end up with a biased effect of `x` on `y`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](chapter-05_files/figure-html/fig-collider-scatter-1.png){#fig-collider-scatter width=672}\n:::\n:::\n\n\nHow can this be? Since `x` and `y` happen before `q`, `q` can't have an impact on them. Let's turn the DAG on its side and consider @fig-collider-time. If we break down the two time points, at time point 1, `q` hasn't happened yet, and `x` and `y` are unrelated. At time point 2, `q` happens due to `x` and `y`. But causality only goes forward in time. `q` happening later can't change the fact that `x` and `y` happened independently at time point 1.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](chapter-05_files/figure-html/fig-collider-time-1.png){#fig-collider-time width=672}\n:::\n:::\n\n\nCausality only goes forward. Association, however, is time-agnostic. It's just an observation about the numerical relationships between variables. When we control for the future, we run the risk of introducing bias. It's challenging to develop an intuition for this. Consider a case where `x` and `y` are the only causes of `q`, and all three variables are binary. When either `x` or `y` equals 1, then `m` happens. If we know `q = 1` and `x = 0` then logically it must be that `y = 1`. Thus, knowing about `q` gives us information about `y` via `x`. This is an unrealistic, extreme example, but it shows how this type of bias, sometimes called *collider-stratification bias* or *selection bias*, occurs: conditioning on `q` provides statistical information about `x` and `y` and distorts their relationship.\n\n::: {.callout-tip}\n## Exchangability revisited\nWe commonly refer exchangability as the assumption of no confounding. Actually, this isn't quite right. It's the assumption of no *open, non-causal* paths. Many times, these are confounding pathways. However, paths can also be opened by conditioning on a collider. Even though these aren't confounders, it creates non-exchangability between the two groups: they are different in a way that matters to the exposure and outcome.\n:::\n\nCorrectly identifying the causal structure between the exposure and outcome thus helps us 1) communicate the assumptions we're making about the relationships between variables and 2) identify sources of bias. Importantly, in doing 2), we are also often able to identify ways to prevent bias based on the assumptions in 1). In the simple case of three DAGs in @fig-dag-path-types, we know whether or not to control for `q` depending on the nature of the causal structure. The set or sets of variables we need to adjust for is called the *adjustment set*. DAGs can help us identify adjustment sets even in complex settings.\n\n::: {.callout-tip}\n## What about interaction?\n\nDAGs don't make a statement about interaction or effect estimate modification even though they are an important part of inference. Technically, interaction is a matter of the functional form of the relationships. Much as we don't need to specify how we're going to model a variable in the DAG (e.g., with splines), we don't need to specify how variables statistically interact with one another.\n\nThere are several ways we use interactions in causal inference. In one extreme, they are simply a matter of functional form: interaction terms are included in models but marginalized over to get an overall causal effect. In the other extreme, we're interested in *joint causal effects*, where the two variables interacting with each other are both causal. In between, we can use interaction terms to identify *heterogenous causal effects*, effects which vary by a second variable that is not assumed to be causal. As with many tools in causal inference, we use the same statistical technique many ways to answer different questions. \n\nMany people have tried ways of expressing interaction in DAGs using different types of arcs, nodes, and other annotations, but no approach has taken off as the preferred way.\n:::\n\nLet's take a look at an example in R. We'll learn how to build DAGs, visualize them, and identify important information like adjustment sets.\n\n## DAGs in R\n\n\n\n- building\n- popout: coordinates. show manual. mention dagitty.net. mention `time_ordered`.\n- paths\n- adjustment sets\n- with ggplot\n\n## Common Structures of Bias\n\n- advanced forms of confounding, e.g. L happens after X\n- Selection bias, M-Bias, Butterfly bias. L2FU later.\n- instrumental variables, precision/competing exposure variables\n\n## Recommendations in building DAGs\n\n### Iterate early and often\n\n- Ideally before when designing your research, at least before analyzing data (avoid overfitting)\n\n### Consider your question\n\n- estimand\n- population and context\n\n### Order nodes by time\n\n- Time ordering algorithm\n- Feedback loops: global warming and A/C use\n\n### Consider the whole data collection process\n\n- race/shooting\n- healthy worker bias\n\n### Include variables you don't have\n\n- Examples where you can and can't adjust depending\n\n### Saturate your DAG by default\n\n### Include instruments and competing exposures\n\n### Focus on the causal structure, then consider measurement bias\n\n### Be accurate, but focus on clarity\n\n### Pick adjustment sets most likely to be succesful\n\n- measurement error, certainty\n- use the path with the most observed variables\n\n### Use robustness checks\n\n- Negative controls/Falsification end-points, dag-data consitency, alternate adjustment sets\n\n## Causal Inference is not (just) a statistical problem {#sec-quartets}\n\n* This may be better off as the next chapter\n\n### Causal and Predictive Models, Revisited {#sec-causal-pred-revisit}\n\n- Probably too long, but if possible, condense to a popout\n- DAGs showing examples where prediction can lean on measured confounders, colliders. It's the amount of information a variable brings, not whether the coeffecient is unbiased affect of variable on outcome.\n- Not practical to fit a prediction model with future variable\n- Table 2 Bias examples. Unmeasure confounding of Z-Y relationship. Mediation example.\n\n",
    "supporting": [
      "chapter-05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}